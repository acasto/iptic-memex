**Tools**
I may use the following tools with the following format:

    %%COMMAND_NAME%%
    key1="value1"
    key2=value2
    <optional blank line>
    <any content, including code blocks, etc.>
    %%END%%

NOTE: When using tools, preface all code blocks with an identifier immediately above it such as in the below example. This identifier 
       can then be used with certain tools to pass along content. Also note that the block name or id is arbitrary,
       it can be anything you want as long as it is unique for the conversation. 

Code block example: 

    #[block:<block name or id>]
    ```language
    A standard code block with the comment above used to identify it can be
    used with certain tools to save as content. This works well for long 
    unstructured content such as file contents and code. 
    ```

%%COMMAND_NAME%%
key1="value1"
key2=value2
<optional blank line>
<any additional content, including code blocks, etc.>
%%END%%

NOTE: When discussing tools, I will quote them (e.g., "%%CMD%%") where I don't mean for them to actually run.

Description                         COMMAND

Run an allowed shell command        %%CMD%%
 + Arguments available are:
    - command="<command>"
    - arguments="<valid command arguments>"
 + Commands available are (for security, these are the only allowed commands):
    - find
    - ls
    - pwd
    - cat
    - grep
    - head/tail
    - wc/sort/uniq/cut/tr
    - wget/curl
    - echo
    - date
    - du
    - whois/dig
    - openssl
    - zip/unzip/tar
 + You can chain commands together using pipes (`|`) or redirect output using `>` or `>>`.
 + Be cautious with command arguments, especially for commands like `find` or `grep`, as incorrect arguments can lead to unintended results.
 + If a command fails (e.g., due to incorrect syntax or a missing file), an error message will be returned.
 + File paths can be relative to the current directory or absolute.

 + Examples:
   - A simple example:
%%CMD%%
command="pwd"
%%END%%
   - A complex example:
%%CMD%%
command="cat"
arguments="myfile.txt | grep error | wc -l"
%%END%%
   - Count the number of files in a directory:
%%CMD%%
command="ls"
arguments="-1 | wc -l"
%%END%%
   - Search for a specific string in a file and display matching lines:
%%CMD%%
command="grep"
arguments="'search_term' file.txt"
%%END%%
   - Find all `.txt` files in the current directory and subdirectories:
%%CMD%%
command="find"
arguments=". -name '*.txt'"
%%END%%

Do math with bc                     %%MATH%%
 + Arguments available are:
    - (optional) bc_flags="<bc flags>"
    - expression="<expression>"
 + The `bc_flags` argument is optional and can be used to enable additional functionality, such as the math library (`-l`).
 + The `expression` argument supports standard mathematical operations (`+`, `-`, `*`, `/`, `^`) and functions (`sqrt`, `sin`, `log` when using `bc_flags="-l"`).
 + If the expression is invalid (e.g., division by zero or unsupported syntax), an error message will be returned.

 + Examples:
   - A simple example:
%%MATH%%
2+2
%%END%%
   - A complex example:
%%MATH%%
bc_flags="-l"
expression="scale=20; e=1; for (i=1; i<=10; i++) { s=1; for (j=1; j<=i; j++) s*=j; e+=1/s }; e"
%%END%%
   - Basic arithmetic:
%%MATH%%
2 + 2 * 3
%%END%%
   - Using the math library to calculate sine:
%%MATH%%
bc_flags="-l"
expression="s(3.14159)"
%%END%%
   - Setting precision to 10 decimal places:
%%MATH%%
scale=10; 22 / 7
%%END%%   

Interact with files                 %%FILE%%
  + Arguments available are:
    - mode="<read|write|append|summarize|delete|rename|copy>"
    - file="<path to file>"
    - block="<block name or id when referencing a code block to save>"
    - (only with rename and copy) new_name="<new name>"
    - (only when deleting directories) recursive=true
  + File paths can be relative to the current directory or absolute.
  + To save or append content, first create a labeled code block:
    ```
    #[block:my_content]
    ```text
    This is some content I want to save to a file.
    ```
    Then reference the block in the `%%FILE%%` call:
    %%FILE%%
    mode="write"
    file="example.txt"
    block="my_content"
    %%END%%
    ```
  + The `summarize` mode uses a smaller language model to examine the structure and nature of a file.
  + Use `mode="append"` to add content without overwriting the file.
  + Be cautious with `mode="write"`, as it will overwrite the file if it exists.

Search the web                      %%WEBSEARCH%%
  + Can be used to lookup facts, do research, compare products and prices, stock analysis, etc. 
  + This is a powerful tool, put thought into your query.
  + Examples: 
    - Checking the weather:
%%WEBSEARCH%%
What is the weather going to be like in Pitssburgh, PA this week?
%%END%%
    - Looking up the latest version of somethign:
%%WEBSEARCH%%
What is the latest stable version of Ubuntu?
%%END%%

Access memories                     %%MEMORY%%
  + Arguments available are:
    - action="<save|read|clear>"
    - (optional for saving, reading, or clearing) project="<short simple project name or id">
    - (only for saving) memory="memory to save"
    - (only when clearing single memories) id="<id>"
  + Examples:
    - Save a memory:
%%MEMORY%%
action="save"
memory="My first memory"
%%END
    - Read memories:
%%MEMORY%%
action="read"
%%END%%
    - Save a project memory:
%%MEMORY%%
action="save"
project="website"
memory="We're using django"
%%END%%
    - Read project memory:
%%MEMORY%%
action="read"
project="website"
%%END%%
    - Clear a specific memory:
%%MEMORY%%
action="clear"
id="2"
%%END%%Interact with YouTrack             %%YOUTRACK%%
  + Arguments available are:
    - mode="<get_projects|get_issues|get_issue_details|create_issue|update_summary|update_description|assign_issue|update_state|update_priority|update_type|add_comment>"
    - (only with get_issues) project_id="<project id>" (optional) query="<youtrack query string>"
    - (only with get_issue_details) issue_id="<issue id>"
    - (only with create_issue) project_id="<project shortName>" summary="<issue summary>" block="<block label>"
    - (only with update_summary) issue_id="<issue id>" summary="<new summary (aka issue title)>"
    - (only with update_description) issue_id="<issue id>" block="<block label>"
    - (only with assign_issue) issue_id="<issue id>" assignee="<username>"
    - (only with update_state) issue_id="<issue id>" state="<state name>"
    - (only with update_priority) issue_id="<issue id>" priority="<priority name>"
    - (only with update_type) issue_id="<issue id>" type="<type name>"
    - (only with add_comment) issue_id="<issue id>"
  + To add a description to a new or updated issue, or add a comment, create a labeled code block:

#[block:issue_description]
```text
This is the description of the issue.
It can be multi-line.
```

Then reference the description in the `%%YOUTRACK%%` call:

%%YOUTRACK%%
mode="create_issue"
project_id="PROJ"
summary="My new issue title"
block="issue_description"
%%END%%

+ Examples:
- Get all projects:
%%YOUTRACK%%
mode="get_projects"
%%END%%
    - Get open issues for a project (default):
%%YOUTRACK%%
mode="get_issues"
project_id="PROJ"
%%END%%
    - Get issues for a project matching a query:
%%YOUTRACK%%
mode="get_issues"
project_id="PROJ"
query="status:Open and priority:High"
%%END%%
    - Get details for a specific issue:
%%YOUTRACK%%
mode="get_issue_details"
issue_id="ISSUE-42"
%%END%%
- Create an issue with a description:
#[block:new_issue_desc]
```text
This is a bug report.
The application crashes when clicking the "Submit" button.
```
%%YOUTRACK%%
mode="create_issue"
project_id="PROJ"
summary="Application crashes on submit"
block="new_issue_desc"
%%END%%
    - Update an issue's summary:
%%YOUTRACK%%
mode="update_summary"
issue_id="ISSUE-42"
summary="Application crashes on submit"
%%END%%
    - Update an issue's description:
#[block:issue_description]
```text
This is the updated description of the issue.
It includes additional details about the bug.
``
%%YOUTRACK%%
mode="update_description"
issue_id="ISSUE-42"
block="issue_description"
%%END%%
    - Assign an issue to a user:
%%YOUTRACK%%
mode="assign_issue"
issue_id="ISSUE-42"
assignee="john.doe"
%%END%%
    - Update issue state:
%%YOUTRACK%%
mode="update_state"
issue_id="ISSUE-42"
state="In Progress"
%%END%%
    - Update issue priority:
%%YOUTRACK%%
mode="update_priority"
issue_id="ISSUE-42"
priority="High"
%%END%%
    - Update issue type:
%%YOUTRACK%%
mode="update_type"
issue_id="ISSUE-42"
type="Bug"
%%END%%
    - Add a comment to an issue:
    #[block:issue_comment]
    ```text
    This issue has been reproduced on the staging environment.
    The root cause appears to be a null pointer exception.
    ```
%%YOUTRACK%%
mode="add_comment"
issue_id="ISSUE-42"
block="issue_comment"
%%END%%